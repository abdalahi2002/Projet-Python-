{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontend\\\\frontdon\\\\src\\\\session.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// SessionContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionContext = /*#__PURE__*/createContext();\nexport const SessionProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = () => {\n    setIsLoggedIn(true);\n    // Effectuer d'autres actions comme stocker le token JWT\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    // Effacer les données de session, par exemple le token JWT\n  };\n  return /*#__PURE__*/_jsxDEV(SessionContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(SessionProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = SessionProvider;\nexport const useSession = () => {\n  _s2();\n  return useContext(SessionContext);\n};\n_s2(useSession, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","SessionContext","SessionProvider","children","_s","isLoggedIn","setIsLoggedIn","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSession","_s2","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontend/frontdon/src/session.js"],"sourcesContent":["// SessionContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst SessionContext = createContext();\r\n\r\nexport const SessionProvider = ({ children }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const login = () => {\r\n    setIsLoggedIn(true);\r\n    // Effectuer d'autres actions comme stocker le token JWT\r\n  };\r\n\r\n  const logout = () => {\r\n    setIsLoggedIn(false);\r\n    // Effacer les données de session, par exemple le token JWT\r\n  };\r\n\r\n  return (\r\n    <SessionContext.Provider value={{ isLoggedIn, login, logout }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSession = () => useContext(SessionContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMM,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClBD,aAAa,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBF,aAAa,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA,CAACC,cAAc,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,UAAU;MAAEE,KAAK;MAAEC;IAAO,CAAE;IAAAL,QAAA,EAC3DA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACV,EAAA,CAlBWF,eAAe;AAAAa,EAAA,GAAfb,eAAe;AAoB5B,OAAO,MAAMc,UAAU,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpB,UAAU,CAACI,cAAc,CAAC;AAAA;AAACgB,GAAA,CAA9CD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}