{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontend\\\\frontdon\\\\src\\\\Table\\\\modifierpassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport AuthContext from '../session';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdatePasswordForm() {\n  _s();\n  const [passwords, setPasswords] = useState({\n    newPassword: '',\n    password_confirm: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  let {\n    authTokens,\n    logout\n  } = useContext(AuthContext);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPasswords(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n\n    // Validation des champs\n    if (passwords.newPassword !== passwords.confirmPassword) {\n      setError(\"Les mots de passe ne correspondent pas.\");\n      return;\n    }\n\n    // Requête vers l'API\n    try {\n      const acces = \"Bearer \" + String(authTokens.token);\n      const response = await fetch(\"http://127.0.0.1:8000/user/\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: acces\n        },\n        body: JSON.stringify({\n          password_confirm: passwords.password_confirm,\n          password: passwords.password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du mot de passe.');\n      }\n      setSuccess(\"Mot de passe mis à jour avec succès.\");\n      setPasswords({\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nouveau mot de passe:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"newPassword\",\n          value: passwords.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirmer le nouveau mot de passe:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: passwords.password_confirm,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Mettre \\xE0 jour le mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdatePasswordForm, \"SUYQtzHDQVjLl1MB4akta1Kia34=\");\n_c = UpdatePasswordForm;\nexport default UpdatePasswordForm;\nvar _c;\n$RefreshReg$(_c, \"UpdatePasswordForm\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","jsxDEV","_jsxDEV","UpdatePasswordForm","_s","passwords","setPasswords","newPassword","password_confirm","error","setError","success","setSuccess","authTokens","logout","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","confirmPassword","acces","String","token","response","fetch","method","headers","Authorization","body","JSON","stringify","password","ok","Error","currentPassword","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontend/frontdon/src/Table/modifierpassword.js"],"sourcesContent":["import React, { useState,useContext } from 'react';\r\nimport AuthContext from '../session';\r\nfunction UpdatePasswordForm() {\r\n  const [passwords, setPasswords] = useState({ newPassword: '', password_confirm: '' });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  let {authTokens,logout} = useContext(AuthContext);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswords(prevState => ({\r\n      ...prevState,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    // Validation des champs\r\n    if (passwords.newPassword !== passwords.confirmPassword) {\r\n      setError(\"Les mots de passe ne correspondent pas.\");\r\n      return;\r\n    }\r\n\r\n    // Requête vers l'API\r\n    try {\r\n        const acces = \"Bearer \" + String(authTokens.token);\r\n        const response = await fetch(\"http://127.0.0.1:8000/user/\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: acces,\r\n          },\r\n          body: JSON.stringify({\r\n            password_confirm: passwords.password_confirm,\r\n            password: passwords.password\r\n          }),\r\n        });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Erreur lors de la mise à jour du mot de passe.');\r\n      }\r\n\r\n      setSuccess(\"Mot de passe mis à jour avec succès.\");\r\n      setPasswords({ currentPassword: '', newPassword: '', confirmPassword: '' });\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      {success && <div className=\"success\">{success}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Nouveau mot de passe:\r\n          <input type=\"password\" name=\"newPassword\" value={passwords.password} onChange={handleChange} />\r\n        </label>\r\n        <label>\r\n          Confirmer le nouveau mot de passe:\r\n          <input type=\"password\" name=\"confirmPassword\" value={passwords.password_confirm} onChange={handleChange} />\r\n        </label>\r\n        <button type=\"submit\">Mettre à jour le mot de passe</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePasswordForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}