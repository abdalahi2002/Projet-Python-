{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontend\\\\frontdon\\\\src\\\\Table\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    id: '',\n    first_name: '',\n    last_name: '',\n    tel: '',\n    username: '',\n    email: '',\n    wilaya: '',\n    type_sang: '',\n    password: '',\n    password_confirm: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://your-api-url/register/', formData);\n      console.log(response.data); // Afficher la réponse de l'API en cas de succès\n      // Réinitialiser le formulaire après la soumission\n      setFormData({\n        id: '',\n        first_name: '',\n        last_name: '',\n        tel: '',\n        username: '',\n        email: '',\n        wilaya: '',\n        type_sang: '',\n        password: '',\n        password_confirm: ''\n      });\n      // Ajoutez ici la logique de redirection vers la page de connexion, par exemple :\n      // history.push('/login');\n    } catch (error) {\n      console.error('Erreur lors de la soumission du formulaire :', error);\n    }\n  };\n  const fields = ['id', 'first_name', 'last_name', 'tel', 'username', 'email', 'wilaya', 'type_sang', 'password', 'password_confirm']; // Définir les champs du formulaire\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-8 p-6 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-blue-500\",\n      children: \"Inscription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"grid grid-cols-2 gap-4\",\n      children: [fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-4 ${index < 5 ? 'col-span-1' : 'col-span-1'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: field,\n          className: \"block mb-1 text-sm font-bold text-black\",\n          children: field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: field === 'password' || field === 'password_confirm' ? 'password' : 'text',\n          id: field,\n          name: field,\n          value: formData[field],\n          onChange: handleChange,\n          className: \"w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"col-span-2 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\",\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterForm, \"jB5QZix7zhlMBOKyjUlWI/QcmTQ=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterForm","_s","formData","setFormData","id","first_name","last_name","tel","username","email","wilaya","type_sang","password","password_confirm","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","error","fields","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","index","htmlFor","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontend/frontdon/src/Table/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RegisterForm = () => {\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        tel: '',\r\n        username: '',\r\n        email: '',\r\n        wilaya: '',\r\n        type_sang: '',\r\n        password: '',\r\n        password_confirm: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://your-api-url/register/', formData);\r\n            console.log(response.data); // Afficher la réponse de l'API en cas de succès\r\n            // Réinitialiser le formulaire après la soumission\r\n            setFormData({\r\n                id: '',\r\n                first_name: '',\r\n                last_name: '',\r\n                tel: '',\r\n                username: '',\r\n                email: '',\r\n                wilaya: '',\r\n                type_sang: '',\r\n                password: '',\r\n                password_confirm: ''\r\n            });\r\n            // Ajoutez ici la logique de redirection vers la page de connexion, par exemple :\r\n            // history.push('/login');\r\n        } catch (error) {\r\n            console.error('Erreur lors de la soumission du formulaire :', error);\r\n        }\r\n    };\r\n\r\n    const fields = ['id', 'first_name','last_name','tel', 'username','email','wilaya','type_sang', 'password','password_confirm']; // Définir les champs du formulaire\r\n\r\n    return (\r\n        <div className=\"max-w-md mx-auto mt-8 p-6 bg-gray-100\">\r\n            <h2 className=\"text-2xl font-bold mb-4 text-blue-500\">Inscription</h2>\r\n            <form onSubmit={handleSubmit} className=\"grid grid-cols-2 gap-4\">\r\n                {fields.map((field, index) => (\r\n                    <div key={field} className={`mb-4 ${index < 5 ? 'col-span-1' : 'col-span-1'}`}>\r\n                        <label htmlFor={field} className=\"block mb-1 text-sm font-bold text-black\">{field}</label>\r\n                        <input\r\n                            type={field === 'password' || field === 'password_confirm' ? 'password' : 'text'}\r\n                            id={field}\r\n                            name={field}\r\n                            value={formData[field]}\r\n                            onChange={handleChange}\r\n                            className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:border-blue-500\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                ))}\r\n                <button type=\"submit\" className=\"col-span-2 bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition duration-300\">S'inscrire</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}